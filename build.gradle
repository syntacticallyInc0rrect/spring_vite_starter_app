plugins {
	id 'org.springframework.boot' version '2.7.4'
	id 'io.spring.dependency-management' version '1.0.14.RELEASE'
	id 'java'
}

group = 'edu.apus.enterprise.java.phillips'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-rest'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.flywaydb:flyway-mysql'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'mysql:mysql-connector-java'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
	useJUnitPlatform()
}

task installClient(type: Exec) {
	inputs.file(file("client/yarn.lock"))
	inputs.file(file("client/package.json"))
	outputs.dir(file("client/node_modules"))
	commandLine("yarn", "--cwd", "client", "install")
}

task buildClient(type: Exec) {
	dependsOn(installClient)
	inputs.dir(file("client"))
	outputs.dir(file("client/dist"))
	commandLine("yarn", "--cwd", "client", "build")
}

task cloneClient(type: Sync) {
	dependsOn(buildClient)
	from(file("./client/dist"))
	into(file("$buildDir/resources/main/static"))
}

bootRun {
	dependsOn(cloneClient)
}
